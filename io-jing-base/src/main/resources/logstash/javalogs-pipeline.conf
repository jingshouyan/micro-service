input {
  file {
    path => ["/data/java/logs/*.log"]
    type => "java-logs"
    start_position => "beginning"
    codec => multiline {
      pattern => "^(?!\!\@\#\$)"
      what=> "previous"
    }
  }
}
filter {
  if [type] == "java-logs" {
    ruby {
      code => "
        x = event.get('message').split('`')
        event.set('logdate',x[1])
        event.set('server',x[2])
        event.set('instance',x[3])
        event.set('traceId',x[4])
        event.set('level',x[5])
        event.set('thread',x[6])
        event.set('logger',x[7])
        event.set('msg',x[8])
      "
    }
    date {
        match => [ "logdate", "yyyy-MM-dd HH:mm:ss,SSS" ]
        target => "@timestamp"
        locale => "zh-Hans-CN"
        timezone => "+08:00"
    }
    ruby {
      code => "
      event.set('timestamp', event.get('@timestamp'))
      event.set('timestamp2', event.get('@timestamp').time.localtime + 8*60*60)
      event.set('@timestamp', event.get('timestamp2'))
      "
      remove_field => ["timestamp2","@version","message"]
    }
  }
}
output {
  elasticsearch {
    hosts => ["127.0.0.1:9200"]
    index => "java-logs-%{+YYYYMMdd}"
    manage_template => true #注意默认为true,一定不能设置为false
    template_overwrite => true #如果设置为true，模板名字一样的时候，新的模板会覆盖旧的模板
    template_name => "java-logs" #注意这个名字是用来查找映射配置的，尽量设置成全局唯一的
    template => "/opt/logstash/javalogs-template.json" #映射配置文件的位置

  }
  stdout {
    codec => rubydebug
  }

}
